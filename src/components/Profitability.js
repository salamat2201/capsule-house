import React, { useState } from 'react';
import styles from './Profitability.module.css';
import { motion } from 'framer-motion';
import { fadeIn, cardHover, slideUp, bounce } from './CalculatorAnimation';

const Profitability = () => {
  const [smallHomes, setSmallHomes] = useState(1);
  const [largeHomes, setLargeHomes] = useState(1);
  const [smallRent, setSmallRent] = useState(12500);
  const [largeRent, setLargeRent] = useState(12500);

  // –¶–µ–Ω—ã –∫–∞–ø—Å—É–ª
  const smallHomePrice = 3620000;
  const largeHomePrice = 4420000;

  const investment = smallHomes * smallHomePrice + largeHomes * largeHomePrice;
  const averageLoad = 0.82;
  const incomePerYear =
    (smallHomes * smallRent + largeHomes * largeRent) * averageLoad * 365;

  const paybackMonths = Math.ceil((investment / incomePerYear) * 12);

  return (
    <motion.div
      className={styles.container}
      initial="hidden"
      animate="visible"
      variants={fadeIn}
    >
      <h1 className={styles.title}>üí° –†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –±–∞–∑—ã –æ—Ç–¥—ã—Ö–∞</h1>

      <motion.div className={styles.calculator} variants={slideUp}>
        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö –¥–æ–º–æ–≤ */}
        <motion.div className={styles.card} variants={cardHover}>
          <label>–ö–∞–ø—Å—É–ª—ã 28-29 –º¬≤</label>
          <div className={styles.counter}>
            <button onClick={() => setSmallHomes((prev) => Math.max(prev - 1, 0))}>
              ‚àí
            </button>
            <span>{smallHomes}</span>
            <button onClick={() => setSmallHomes((prev) => prev + 1)}>+</button>
          </div>
          <input
            type="range"
            dataRangeColor="#ffffff"
            min="5000"
            max="20000"
            value={smallRent}
            step="500"
            onChange={(e) => setSmallRent(Number(e.target.value))}
          />
          <span className={styles.rangeValue}>
            –ê—Ä–µ–Ω–¥–∞: {smallRent.toLocaleString()} —Ä—É–±/–¥–µ–Ω—å
          </span>
        </motion.div>

        {/* –ö–∞—Ä—Ç–æ—á–∫–∞ –¥–ª—è –±–æ–ª—å—à–∏—Ö –¥–æ–º–æ–≤ */}
        <motion.div className={styles.card} variants={cardHover}>
          <label>–ö–∞–ø—Å—É–ª—ã 35-38 –º¬≤</label>
          <div className={styles.counter}>
            <button onClick={() => setLargeHomes((prev) => Math.max(prev - 1, 0))}>
              ‚àí
            </button>
            <span>{largeHomes}</span>
            <button onClick={() => setLargeHomes((prev) => prev + 1)}>+</button>
          </div>
          <input
            type="range"
            min="5000"
            max="20000"
            value={largeRent}
            step="500"
            onChange={(e) => setLargeRent(Number(e.target.value))}
          />
          <span className={styles.rangeValue}>
            –ê—Ä–µ–Ω–¥–∞: {largeRent.toLocaleString()} —Ä—É–±/–¥–µ–Ω—å
          </span>
        </motion.div>
      </motion.div>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
      <motion.div className={styles.results} variants={bounce}>
        <h3>
          üí∞ <span>–°—É–º–º–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π:</span>{' '}
          <strong>{investment.toLocaleString()} —Ä—É–±.</strong>
        </h3>
        <h3>
          üìà <span>–î–æ—Ö–æ–¥:</span>{' '}
          <strong>{incomePerYear.toLocaleString()} —Ä—É–±/–≥–æ–¥</strong>
        </h3>
        <h3>
          ‚è≥ <span>–û–∫—É–ø–∞–µ–º–æ—Å—Ç—å:</span> <strong>{paybackMonths} –º–µ—Å—è—Ü–µ–≤</strong>
        </h3>
      </motion.div>

      <motion.button
        className={styles.button}
        whileHover={{ scale: 1.1 }}
        whileTap={{ scale: 0.95 }}
      >
        –û–±—Å—É–¥–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ
      </motion.button>
    </motion.div>
  );
};

export default Profitability;
